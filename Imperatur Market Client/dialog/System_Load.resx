<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>